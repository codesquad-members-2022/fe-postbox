const {
  마을개수랜덤생성,
  크기랜덤생성,
  우체통존재여부랜덤생성,
  좌표랜덤생성,
} = require("./utils.js");

const 시작가로길이 = 700;
const 시작세로길이 = 800;
const 우체통최대크기 = 10;

const 사분면생성 = (기존가로길이, 기준세로길이, 기준좌표) => {
  const { x, y } = 기준좌표;
  return [
    [x, y],
    [x + 기존가로길이 / 2, y],
    [x, y + 기준세로길이 / 2],
    [x + 기존가로길이 / 2, y + 기준세로길이 / 2],
  ];
};

const 마을생성 = (기준가로길이, 기준세로길이, 기준사분면) => {
  if (기준가로길이 < 50 || 기준세로길이 < 50) return;

  return Array(마을개수랜덤생성())
    .fill(0)
    .map((v, i, origin) => {
      const [x, y] = 기준사분면[i];
      const 베이스좌표 = { x, y };
      const 가로길이 = 크기랜덤생성(false, 기준가로길이, 기준사분면.length);
      const 세로길이 = 크기랜덤생성(false, 기준세로길이, 기준사분면.length);
      const 상대좌표 = 좌표랜덤생성(
        베이스좌표,
        가로길이,
        세로길이,
        기준가로길이,
        기준세로길이
      );
      const 우체통존재여부 = 우체통존재여부랜덤생성();
      const 우체통크기 = 크기랜덤생성(true, 우체통최대크기);
      const 자식사분면 = 사분면생성(가로길이, 세로길이, 상대좌표);
      const 자식마을 = 마을생성(가로길이, 세로길이, 자식사분면);

      return {
        가로길이,
        세로길이,
        우체통존재여부,
        상대좌표,
        우체통크기,
        자식마을,
      };
    });
};

const 데이터얻기 = () => {
  const 초기좌표 = { x: 0, y: 0 };
  const 사분면 = 사분면생성(시작가로길이, 시작세로길이, 초기좌표);
  const results = 마을생성(시작가로길이, 시작세로길이, 사분면);
  return { results };
};

module.exports = { 데이터얻기 };
